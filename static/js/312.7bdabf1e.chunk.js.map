{"version":3,"file":"static/js/312.7bdabf1e.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Loading/Loading.styled.js","components/Loading/Loading.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectAllContacts = state => state.contacts.items;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;","import styled from \"@emotion/styled\";\n\nexport const FormContainer = styled.form`\n    margin: 0 auto;\n    display:flex;\n    flex-direction: column;\n    gap: 10px;\n    border-radius: 5px;\n    max-width: 330px;\n    box-shadow: ${props => props.theme.filters.shadow};\n    padding: 10px;\n    background-image: ${props => props.theme.gradients.grey};\n    text-transform: uppercase;\n`;\n\nexport const FromInput = styled.input`\n    height: 20px;\n    margin-bottom: 8px;\n    border-top: 1px;\n    border-left: 1px;\n    border-right: 1px;\n    border-width: 1px;\n    background-color: rgb(242, 191, 94, 0);\n`;\n\nexport const SubmitButton = styled.button`\n    width: 150px;\n    margin: 0 auto;\n    padding: 5px;\n    font-weight: 700;\n    text-transform: uppercase;\n    border: none;\n    color: rgb(45, 45, 45);\n    border-radius: 5px;\n    box-shadow: ${props => props.theme.filters.shadow};\n    background-color: rgb(242, 191, 94, 0);\n    :hover {\n    background-color: rgba(192,198,230,0.3); \n    }\n    :active {\n    transform: translateY(1px);\n    }\n`;","\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { addContact } from \"redux/contacts/operations\";\n\n\nimport { toast } from 'react-toastify';\n\nimport { FormContainer, FromInput, SubmitButton } from \"./ContactForm.styled\";\n\nexport function ContactForm() {\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n const onSubmitHandler = e => {\n    e.preventDefault();\n    // console.dir(e.target.elements.name.value);\n    const sameName = contacts.find(\n      contact => contact.name.toLowerCase() === e.target.elements.name.value.toLowerCase()\n    );\n   \n    if (sameName) {\n      return toast.error(`${sameName.name} is already in contacts`, {\n            position: \"top-center\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            newestOnTop: false,\n            closeOnClick: true,\n            rtl: false,\n            pauseOnFocusLoss: true,\n            draggable: true,\n            pauseOnHover: true,\n            theme: \"colored\"});\n    } \n    dispatch(addContact({\n      name: String(e.target.elements.name.value),\n      number: e.target.elements.number.value\n    }));\n   e.target.reset();\n  };\n\n\n  return (\n    <FormContainer onSubmit={onSubmitHandler}>\n            <label>Name</label>\n             <FromInput\n                 \n                  type=\"text\"\n                  placeholder=\"Type name\"\n                  name=\"name\"\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                  required\n      />\n      <label>Number</label>\n             <FromInput\n                  \n                  \n                  placeholder=\"Type number\"\n                  type=\"tel\"\n                  name=\"number\"\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  required\n                />\n              <SubmitButton type=\"submit\">Add contact</SubmitButton>\n            \n    </FormContainer>\n               \n  )\n  \n};\n","import styled from \"@emotion/styled\";\n\nexport const ContactsTable = styled.table`\n    border-collapse: collapse;\n    margin: 0 auto;\n    margin-top: 50px;\n    text-align: center;\n    box-shadow: ${props => props.theme.filters.shadow};\n    margin-bottom: 50px;\n`;\n\nexport const TableHeaders = styled.th`\n    text-transform: uppercase;\n    border: 1px solid #ddd;\n    padding: 12px;\n    background-color: rgba(255,255,255,0.5) ;\n\n`;\n\nexport const TableRows = styled.tr`\n    :nth-of-type(even){background-color: rgba(255,255,255,0.2)}\n`;\n\nexport const TableData = styled.td`\n    border: 1px solid #ddd;\n    text-transform: capitalize;\n    padding: 6px 0;\n    padding: 8px;\n    color: ${props => props.theme.colors.darkGrey};\n`;\n\nexport const DeleteButton = styled.button`\n    background-color:  rgba(192,198,230,0);\n    border: solid 1px ;\n    border-radius: 5px;\n    height:25px;\n    :hover {\n    color: red;\n    }\n`;\n\n\n    \n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nimport { ContactsTable, TableHeaders, TableRows, TableData, DeleteButton } from \"./ContactList.styled\";\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n  const filter = useSelector(selectFilter);\n\n  // const onDeleteHandler = () => {\n  //   dispatch(deleteContact(el.id))\n  //  };\n  // }\n\n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  const filteredContacts = findContacts();\n  \n  return (\n      \n    <ContactsTable >\n      <thead>\n        <TableRows>\n          <TableHeaders>Name</TableHeaders>\n          <TableHeaders>Phone number</TableHeaders>\n          <TableHeaders></TableHeaders>\n        </TableRows>\n      </thead>\n      \n      <tbody>\n        {filteredContacts.map(el => (\n          <TableRows key={el.id}>\n            <TableData>{el.name}</TableData>\n            <TableData>{el.number}</TableData>\n            <TableData><DeleteButton type=\"button\" onClick={() => dispatch(deleteContact(el.id))}>delete</DeleteButton></TableData>\n          </TableRows>\n        ))}\n      </tbody>\n    </ContactsTable>\n  )\n};\n\n\n","import styled from \"@emotion/styled\";\n\nexport const SearchInput = styled.input`\n    border-top: 1px;\n    border-left: 1px;\n    border-right: 1px;\n    border-width: 1px;\n    background-color: rgb(242, 191, 94, 0);\n`;","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\n\nimport { SearchInput } from \"./Filter.styled\"\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n    return (\n        <label htmlFor=\"\">\n        Find contacts by name\n        <SearchInput\n            type=\"text\"\n            onChange={e => dispatch(filterContacts(e.currentTarget.value))} />\n        </label>\n    )\n}\n","import styled from '@emotion/styled';\n\n\nexport const Container = styled.div`\n\n  position: absolute;\n    left: 47%;\n    top: 50%;\n    position: fixed;\n    z-index: 4;\n    width: 8px;\n    @media screen and (max-width: 320px){\n    left: 40%;\n    }\n`;\n\nexport const LoadingGif = styled.img`\n\n  width: 50px;\n`;\n\nexport const Text = styled.p`\nmargin-top: 0;\n    color: black;\n`;\n","import React from 'react';\n\nimport { Container, LoadingGif, Text } from './Loading.styled';\nimport catgif from './loading1.gif'\n\nexport const Loading = () => {\n  return (\n    <>\n      <Container>\n              <LoadingGif src={catgif} alt='cat with fish gif' />\n              <Text>Loading...</Text>\n      </Container>\n    </>\n  );\n};\n","import { ContactForm } from \"../components/ContactForm/ContactForm\";\nimport { ContactList } from \"../components/ContactList/ContactList\";\nimport { Filter } from \"../components/Filter/Filter\";\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { selectLoading } from 'redux/contacts/selectors';\n\n\n// import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Loading } from '../components/Loading/Loading';\n\n\n// import { useGetContactsQuery } from '../../redux/contactsSlice';\n\nexport default function Contacts() {\n\n  const dispatch = useDispatch();\n\n   useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n \n  const contacts = useSelector(selectAllContacts);\n  // console.log(contacts);\n  const isLoading = useSelector(selectLoading);\n    return (\n        <div>\n        <>\n          \n          <h1>Phonebook</h1>\n          <ContactForm />\n          \n          <h2>Contacts</h2>\n          <Filter /> \n          {isLoading && <Loading />}\n          {contacts.length === 0 ? <p>empty</p> : <ContactList/>}\n          \n        </>\n\n        {/* Settings tostify  */}\n   {/* <ToastContainer/> */}\n    </div>\n    )\n}"],"names":["selectAllContacts","state","contacts","items","selectLoading","isLoading","selectFilter","filter","FormContainer","styled","props","theme","filters","shadow","gradients","grey","FromInput","SubmitButton","ContactForm","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","sameName","find","contact","name","toLowerCase","target","elements","value","toast","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","addContact","String","number","reset","type","placeholder","pattern","title","required","ContactsTable","TableHeaders","TableRows","TableData","colors","darkGrey","DeleteButton","ContactList","filteredContacts","normalizedFilter","includes","findContacts","map","el","onClick","deleteContact","id","SearchInput","Filter","htmlFor","onChange","filterContacts","currentTarget","Container","LoadingGif","Text","Loading","src","catgif","alt","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}